{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "Debug Adapter Protocol",
  "description": "The Debug Adapter Protocol defines the protocol used between an editor or IDE and a debugger or runtime.",
  "type": "object",

  "definitions": {
    "ProtocolMessage": {
      "type": "object",
      "title": "Base Protocol",
      "description": "Base class of requests, responses, and events.",
      "properties": {
        "seq": {
          "type": "integer",
          "description": "Sequence number (also known as message ID). For protocol messages of type 'request' this ID can be used to cancel the request."
        },
        "type": {
          "type": "string",
          "description": "Message type.",
          "_enum": ["request", "response", "event"]
        }
      },
      "required": ["seq", "type"]
    },

    "Request": {
      "allOf": [
        { "$ref": "#/definitions/ProtocolMessage" },
        {
          "type": "object",
          "description": "A client or debug adapter initiated request.",
          "properties": {
            "type": {
              "type": "string",
              "enum": ["request"]
            },
            "command": {
              "type": "string",
              "description": "The command to execute."
            },
            "arguments": {
              "type": [
                "array",
                "boolean",
                "integer",
                "null",
                "number",
                "object",
                "string"
              ],
              "description": "Object containing arguments for the command."
            }
          },
          "required": ["type", "command"]
        }
      ]
    },

    "RestartRequest": {
      "allOf": [
        { "$ref": "#/definitions/Request" },
        {
          "type": "object",
          "description": "Restarts a debug session. Clients should only call this request if the capability 'supportsRestartRequest' is true.\nIf the capability is missing or has the value false, a typical client will emulate 'restart' by terminating the debug adapter first and then launching it anew.",
          "properties": {
            "command": {
              "type": "string",
              "enum": ["restart"]
            },
            "arguments": {
              "$ref": "#/definitions/RestartArguments"
            }
          },
          "required": ["command"]
        }
      ]
    },
    "RestartArguments": {
      "type": "object",
      "description": "Arguments for 'restart' request.",
      "properties": {
        "arguments": {
          "oneOf": [
            { "$ref": "#/definitions/LaunchRequestArguments" },
            { "$ref": "#/definitions/AttachRequestArguments" }
          ],
          "description": "The latest version of the 'launch' or 'attach' configuration."
        }
      }
    },
    "AttachRequestArguments": {
      "type": "object",
      "description": "Arguments for 'attach' request. Additional attributes are implementation specific.",
      "properties": {
        "__restart": {
          "type": [
            "array",
            "boolean",
            "integer",
            "null",
            "number",
            "object",
            "string"
          ],
          "description": "Optional data from the previous, restarted session.\nThe data is sent as the 'restart' attribute of the 'terminated' event.\nThe client should leave the data intact."
        }
      }
    },
    "LaunchRequestArguments": {
      "type": "object",
      "description": "Arguments for 'launch' request. Additional attributes are implementation specific.",
      "properties": {
        "noDebug": {
          "type": "boolean",
          "description": "If noDebug is true, the launch request should launch the program without enabling debugging."
        },
        "__restart": {
          "type": [
            "array",
            "boolean",
            "integer",
            "null",
            "number",
            "object",
            "string"
          ],
          "description": "Optional data from the previous, restarted session.\nThe data is sent as the 'restart' attribute of the 'terminated' event.\nThe client should leave the data intact."
        }
      }
    }
  }
}
