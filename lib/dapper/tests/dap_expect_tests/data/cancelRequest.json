{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "Debug Adapter Protocol",
  "description": "The Debug Adapter Protocol defines the protocol used between an editor or IDE and a debugger or runtime.",
  "type": "object",

  "definitions": {
    "ProtocolMessage": {
      "type": "object",
      "title": "Base Protocol",
      "description": "Base class of requests, responses, and events.",
      "properties": {
        "seq": {
          "type": "integer",
          "description": "Sequence number (also known as message ID). For protocol messages of type 'request' this ID can be used to cancel the request."
        },
        "type": {
          "type": "string",
          "description": "Message type.",
          "_enum": ["request", "response", "event"]
        }
      },
      "required": ["seq", "type"]
    },

    "Request": {
      "allOf": [
        { "$ref": "#/definitions/ProtocolMessage" },
        {
          "type": "object",
          "description": "A client or debug adapter initiated request.",
          "properties": {
            "type": {
              "type": "string",
              "enum": ["request"]
            },
            "command": {
              "type": "string",
              "description": "The command to execute."
            },
            "arguments": {
              "type": [
                "array",
                "boolean",
                "integer",
                "null",
                "number",
                "object",
                "string"
              ],
              "description": "Object containing arguments for the command."
            }
          },
          "required": ["type", "command"]
        }
      ]
    },

    "CancelRequest": {
      "allOf": [
        { "$ref": "#/definitions/Request" },
        {
          "type": "object",
          "description": "The 'cancel' request is used by the client in two situations:\n- to indicate that it is no longer interested in the result produced by a specific request issued earlier\n- to cancel a progress sequence. Clients should only call this request if the capability 'supportsCancelRequest' is true.\nThis request has a hint characteristic: a debug adapter can only be expected to make a 'best effort' in honouring this request but there are no guarantees.\nThe 'cancel' request may return an error if it could not cancel an operation but a client should refrain from presenting this error to end users.\nA client should only call this request if the capability 'supportsCancelRequest' is true.\nThe request that got cancelled still needs to send a response back. This can either be a normal result ('success' attribute true) or an error response ('success' attribute false and the 'message' set to 'cancelled').\nReturning partial results from a cancelled request is possible but please note that a client has no generic way for detecting that a response is partial or not.\nThe progress that got cancelled still needs to send a 'progressEnd' event back.\n A client should not assume that progress just got cancelled after sending the 'cancel' request.",
          "properties": {
            "command": {
              "type": "string",
              "enum": ["cancel"]
            },
            "arguments": {
              "$ref": "#/definitions/CancelArguments"
            }
          },
          "required": ["command"]
        }
      ]
    },
    "CancelArguments": {
      "type": "object",
      "description": "Arguments for 'cancel' request.",
      "properties": {
        "requestId": {
          "type": "integer",
          "description": "The ID (attribute 'seq') of the request to cancel. If missing no request is cancelled.\nBoth a 'requestId' and a 'progressId' can be specified in one request."
        },
        "progressId": {
          "type": "string",
          "description": "The ID (attribute 'progressId') of the progress to cancel. If missing no progress is cancelled.\nBoth a 'requestId' and a 'progressId' can be specified in one request."
        }
      }
    }
  }
}
